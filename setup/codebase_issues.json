[
  {
    "type": "TECHNICAL_DEBT",
    "risk_level": "MEDIUM",
    "file": "backend/python_nlp/ai_training.py",
    "line": 42,
    "description": "TODO: Add LLM interaction logic here",
    "impact": "Code maintainability and quality",
    "remediation": "Address the TODO comment",
    "timeline": "1-3 months",
    "effort": "1-4 hours"
  },
  {
    "type": "TECHNICAL_DEBT",
    "risk_level": "MEDIUM",
    "file": "backend/python_nlp/smart_retrieval.py",
    "line": 150,
    "description": "TODO: Implement CLI logic",
    "impact": "Code maintainability and quality",
    "remediation": "Address the TODO comment",
    "timeline": "1-3 months",
    "effort": "1-4 hours"
  },
  {
    "type": "TECHNICAL_DEBT",
    "risk_level": "MEDIUM",
    "file": "backend/node_engine/workflow_engine.py",
    "line": 281,
    "description": "TODO: (P2, 2h): Enhance type validation to support more complex type relationships",
    "impact": "Code maintainability and quality",
    "remediation": "Address the TODO comment",
    "timeline": "1-3 months",
    "effort": "1-4 hours"
  },
  {
    "type": "TECHNICAL_DEBT",
    "risk_level": "MEDIUM",
    "file": "backend/node_engine/workflow_engine.py",
    "line": 282,
    "description": "TODO: (P2, 3h): Add support for optional input ports with default values",
    "impact": "Code maintainability and quality",
    "remediation": "Address the TODO comment",
    "timeline": "1-3 months",
    "effort": "1-4 hours"
  },
  {
    "type": "TECHNICAL_DEBT",
    "risk_level": "MEDIUM",
    "file": "backend/node_engine/workflow_engine.py",
    "line": 283,
    "description": "TODO: (P3, 4h): Implement input transformation pipeline for incompatible but convertible types",
    "impact": "Code maintainability and quality",
    "remediation": "Address the TODO comment",
    "timeline": "1-3 months",
    "effort": "1-4 hours"
  },
  {
    "type": "TECHNICAL_DEBT",
    "risk_level": "MEDIUM",
    "file": "backend/node_engine/workflow_engine.py",
    "line": 307,
    "description": "TODO: (P1, 4h): Expand type compatibility rules to support all defined DataType combinations",
    "impact": "Code maintainability and quality",
    "remediation": "Address the TODO comment",
    "timeline": "1-3 months",
    "effort": "1-4 hours"
  },
  {
    "type": "TECHNICAL_DEBT",
    "risk_level": "MEDIUM",
    "file": "backend/node_engine/workflow_engine.py",
    "line": 308,
    "description": "TODO: (P2, 3h): Add support for generic types and type parameters",
    "impact": "Code maintainability and quality",
    "remediation": "Address the TODO comment",
    "timeline": "1-3 months",
    "effort": "1-4 hours"
  },
  {
    "type": "TECHNICAL_DEBT",
    "risk_level": "MEDIUM",
    "file": "backend/node_engine/workflow_engine.py",
    "line": 309,
    "description": "TODO: (P3, 2h): Implement type coercion for compatible but distinct types",
    "impact": "Code maintainability and quality",
    "remediation": "Address the TODO comment",
    "timeline": "1-3 months",
    "effort": "1-4 hours"
  },
  {
    "type": "TECHNICAL_DEBT",
    "risk_level": "MEDIUM",
    "file": "backend/node_engine/security_manager.py",
    "line": 59,
    "description": "TODO: (P1, 3h): Implement comprehensive security policies with RBAC support",
    "impact": "Code maintainability and quality",
    "remediation": "Address the TODO comment",
    "timeline": "1-3 months",
    "effort": "1-4 hours"
  },
  {
    "type": "TECHNICAL_DEBT",
    "risk_level": "MEDIUM",
    "file": "backend/node_engine/security_manager.py",
    "line": 60,
    "description": "TODO: (P1, 4h): Add rate limiting for different user roles and node types",
    "impact": "Code maintainability and quality",
    "remediation": "Address the TODO comment",
    "timeline": "1-3 months",
    "effort": "1-4 hours"
  },
  {
    "type": "TECHNICAL_DEBT",
    "risk_level": "MEDIUM",
    "file": "backend/node_engine/security_manager.py",
    "line": 84,
    "description": "TODO: (P1, 5h): Implement comprehensive node validation with static analysis of config parameters",
    "impact": "Code maintainability and quality",
    "remediation": "Address the TODO comment",
    "timeline": "1-3 months",
    "effort": "1-4 hours"
  },
  {
    "type": "TECHNICAL_DEBT",
    "risk_level": "MEDIUM",
    "file": "backend/node_engine/security_manager.py",
    "line": 85,
    "description": "TODO: (P2, 3h): Add support for dynamic security policies based on user context",
    "impact": "Code maintainability and quality",
    "remediation": "Address the TODO comment",
    "timeline": "1-3 months",
    "effort": "1-4 hours"
  },
  {
    "type": "TECHNICAL_DEBT",
    "risk_level": "MEDIUM",
    "file": "backend/node_engine/security_manager.py",
    "line": 164,
    "description": "TODO: (P1, 4h): Enhance sanitization to support additional content types (Markdown, etc.)",
    "impact": "Code maintainability and quality",
    "remediation": "Address the TODO comment",
    "timeline": "1-3 months",
    "effort": "1-4 hours"
  },
  {
    "type": "TECHNICAL_DEBT",
    "risk_level": "MEDIUM",
    "file": "backend/node_engine/security_manager.py",
    "line": 165,
    "description": "TODO: (P2, 2h): Add configurable sanitization policies based on security levels",
    "impact": "Code maintainability and quality",
    "remediation": "Address the TODO comment",
    "timeline": "1-3 months",
    "effort": "1-4 hours"
  },
  {
    "type": "TECHNICAL_DEBT",
    "risk_level": "MEDIUM",
    "file": "backend/node_engine/security_manager.py",
    "line": 214,
    "description": "TODO: (P1, 8h): Implement comprehensive execution sandboxing with resource isolation",
    "impact": "Code maintainability and quality",
    "remediation": "Address the TODO comment",
    "timeline": "1-3 months",
    "effort": "1-4 hours"
  },
  {
    "type": "TECHNICAL_DEBT",
    "risk_level": "MEDIUM",
    "file": "backend/node_engine/security_manager.py",
    "line": 215,
    "description": "TODO: (P2, 4h): Add support for custom execution environments based on node security levels",
    "impact": "Code maintainability and quality",
    "remediation": "Address the TODO comment",
    "timeline": "1-3 months",
    "effort": "1-4 hours"
  },
  {
    "type": "TECHNICAL_DEBT",
    "risk_level": "MEDIUM",
    "file": "backend/node_engine/test_security.py",
    "line": 29,
    "description": "TODO: (P1, 3h): Fix bare except clauses in test files per CODEREVIEW_REPORT.md",
    "impact": "Code maintainability and quality",
    "remediation": "Address the TODO comment",
    "timeline": "1-3 months",
    "effort": "1-4 hours"
  },
  {
    "type": "TECHNICAL_DEBT",
    "risk_level": "MEDIUM",
    "file": "backend/node_engine/test_security.py",
    "line": 30,
    "description": "TODO: (P2, 2h): Add missing type hints to all test functions",
    "impact": "Code maintainability and quality",
    "remediation": "Address the TODO comment",
    "timeline": "1-3 months",
    "effort": "1-4 hours"
  },
  {
    "type": "TECHNICAL_DEBT",
    "risk_level": "MEDIUM",
    "file": "backend/node_engine/test_security.py",
    "line": 57,
    "description": "TODO: (P1, 4h): Add comprehensive test coverage for all security features",
    "impact": "Code maintainability and quality",
    "remediation": "Address the TODO comment",
    "timeline": "1-3 months",
    "effort": "1-4 hours"
  },
  {
    "type": "TECHNICAL_DEBT",
    "risk_level": "MEDIUM",
    "file": "backend/node_engine/test_security.py",
    "line": 58,
    "description": "TODO: (P2, 2h): Implement negative test cases for security validation",
    "impact": "Code maintainability and quality",
    "remediation": "Address the TODO comment",
    "timeline": "1-3 months",
    "effort": "1-4 hours"
  },
  {
    "type": "TECHNICAL_DEBT",
    "risk_level": "MEDIUM",
    "file": "src/core/database.py",
    "line": 28,
    "description": "TODO: (P1, 6h): Refactor global state management to use dependency injection",
    "impact": "Code maintainability and quality",
    "remediation": "Address the TODO comment",
    "timeline": "1-3 months",
    "effort": "1-4 hours"
  },
  {
    "type": "TECHNICAL_DEBT",
    "risk_level": "MEDIUM",
    "file": "src/core/database.py",
    "line": 29,
    "description": "TODO: (P2, 4h): Make data directory configurable via environment variables or settings",
    "impact": "Code maintainability and quality",
    "remediation": "Address the TODO comment",
    "timeline": "1-3 months",
    "effort": "1-4 hours"
  },
  {
    "type": "TECHNICAL_DEBT",
    "risk_level": "MEDIUM",
    "file": "src/core/database.py",
    "line": 90,
    "description": "TODO: (P1, 12h): Refactor to eliminate global state and singleton pattern per functional_analysis_report.md",
    "impact": "Code maintainability and quality",
    "remediation": "Address the TODO comment",
    "timeline": "1-3 months",
    "effort": "1-4 hours"
  },
  {
    "type": "TECHNICAL_DEBT",
    "risk_level": "MEDIUM",
    "file": "src/core/database.py",
    "line": 91,
    "description": "TODO: (P2, 6h): Implement proper dependency injection for database manager instance",
    "impact": "Code maintainability and quality",
    "remediation": "Address the TODO comment",
    "timeline": "1-3 months",
    "effort": "1-4 hours"
  },
  {
    "type": "TECHNICAL_DEBT",
    "risk_level": "MEDIUM",
    "file": "src/core/database.py",
    "line": 125,
    "description": "TODO: (P1, 4h): Remove hidden side effects from initialization per functional_analysis_report.md",
    "impact": "Code maintainability and quality",
    "remediation": "Address the TODO comment",
    "timeline": "1-3 months",
    "effort": "1-4 hours"
  },
  {
    "type": "TECHNICAL_DEBT",
    "risk_level": "MEDIUM",
    "file": "src/core/database.py",
    "line": 126,
    "description": "TODO: (P2, 3h): Implement lazy loading strategy that is more predictable and testable",
    "impact": "Code maintainability and quality",
    "remediation": "Address the TODO comment",
    "timeline": "1-3 months",
    "effort": "1-4 hours"
  },
  {
    "type": "TECHNICAL_DEBT",
    "risk_level": "MEDIUM",
    "file": "src/core/database.py",
    "line": 582,
    "description": "TODO: (P1, 6h): Optimize search performance to avoid disk I/O per STATIC_ANALYSIS_REPORT.md",
    "impact": "Code maintainability and quality",
    "remediation": "Address the TODO comment",
    "timeline": "1-3 months",
    "effort": "1-4 hours"
  },
  {
    "type": "TECHNICAL_DEBT",
    "risk_level": "MEDIUM",
    "file": "src/core/database.py",
    "line": 583,
    "description": "TODO: (P2, 4h): Implement search indexing to improve query performance",
    "impact": "Code maintainability and quality",
    "remediation": "Address the TODO comment",
    "timeline": "1-3 months",
    "effort": "1-4 hours"
  },
  {
    "type": "TECHNICAL_DEBT",
    "risk_level": "MEDIUM",
    "file": "src/core/database.py",
    "line": 584,
    "description": "TODO: (P3, 3h): Add support for search result caching",
    "impact": "Code maintainability and quality",
    "remediation": "Address the TODO comment",
    "timeline": "1-3 months",
    "effort": "1-4 hours"
  },
  {
    "type": "ARCHITECTURE_CONCERN",
    "risk_level": "MEDIUM",
    "file": "backend/python_nlp/nlp_engine.py",
    "description": "Large module (1003 lines)",
    "impact": "Maintainability and readability",
    "remediation": "Split into smaller, focused modules",
    "timeline": "1-2 months",
    "effort": "3-7 days"
  },
  {
    "type": "PERFORMANCE_BOTTLENECK",
    "risk_level": "MEDIUM",
    "file": "codebase_analysis.py",
    "description": "Potential inefficient nested loops",
    "impact": "Execution time and resource usage",
    "remediation": "Optimize loops, consider using list comprehensions or numpy operations",
    "timeline": "1-2 months",
    "effort": "2-4 days"
  },
  {
    "type": "PERFORMANCE_BOTTLENECK",
    "risk_level": "MEDIUM",
    "file": "codebase_analysis.py",
    "description": "Multiple file I/O operations",
    "impact": "I/O performance",
    "remediation": "Implement caching or batch operations",
    "timeline": "2-3 weeks",
    "effort": "3-5 days"
  },
  {
    "type": "SECURITY_VULNERABILITY",
    "risk_level": "HIGH",
    "file": "tests/test_auth.py",
    "description": "Hardcoded API Key/Secret found",
    "impact": "Security breach risk",
    "remediation": "Use environment variables or secure configuration management",
    "timeline": "1-2 weeks",
    "effort": "2-8 hours"
  },
  {
    "type": "SECURITY_VULNERABILITY",
    "risk_level": "HIGH",
    "file": "tests/test_mfa.py",
    "description": "Hardcoded Potential Secret found",
    "impact": "Security breach risk",
    "remediation": "Use environment variables or secure configuration management",
    "timeline": "1-2 weeks",
    "effort": "2-8 hours"
  },
  {
    "type": "MAINTAINABILITY_ISSUE",
    "risk_level": "MEDIUM",
    "file": "",
    "description": "Code duplication (6 occurrences)",
    "impact": "Maintenance overhead",
    "remediation": "Extract common code into reusable functions/classes",
    "timeline": "2-4 weeks",
    "effort": "1-3 days"
  },
  {
    "type": "MAINTAINABILITY_ISSUE",
    "risk_level": "MEDIUM",
    "file": "modules/email/routes.py",
    "description": "Code duplication (279 occurrences)",
    "impact": "Maintenance overhead",
    "remediation": "Extract common code into reusable functions/classes",
    "timeline": "2-4 weeks",
    "effort": "1-3 days"
  },
  {
    "type": "MAINTAINABILITY_ISSUE",
    "risk_level": "MEDIUM",
    "file": "modules/system_status/__init__.py",
    "description": "Code duplication (325 occurrences)",
    "impact": "Maintenance overhead",
    "remediation": "Extract common code into reusable functions/classes",
    "timeline": "2-4 weeks",
    "effort": "1-3 days"
  },
  {
    "type": "MAINTAINABILITY_ISSUE",
    "risk_level": "MEDIUM",
    "file": "launch.py",
    "description": "High complexity function 'main' (cyclomatic complexity: 28)",
    "impact": "Code readability and testability",
    "remediation": "Refactor into smaller, simpler functions",
    "timeline": "1-2 months",
    "effort": "2-5 days"
  },
  {
    "type": "MAINTAINABILITY_ISSUE",
    "risk_level": "MEDIUM",
    "file": "src/main.py",
    "description": "High complexity function 'create_ai_lab_tab' (cyclomatic complexity: 16)",
    "impact": "Code readability and testability",
    "remediation": "Refactor into smaller, simpler functions",
    "timeline": "1-2 months",
    "effort": "2-5 days"
  },
  {
    "type": "MAINTAINABILITY_ISSUE",
    "risk_level": "MEDIUM",
    "file": "deployment/data_migration.py",
    "description": "High complexity function 'migrate_sqlite_to_json' (cyclomatic complexity: 17)",
    "impact": "Code readability and testability",
    "remediation": "Refactor into smaller, simpler functions",
    "timeline": "1-2 months",
    "effort": "2-5 days"
  },
  {
    "type": "MAINTAINABILITY_ISSUE",
    "risk_level": "MEDIUM",
    "file": "backend/plugins/email_filter_node.py",
    "description": "High complexity function 'run' (cyclomatic complexity: 16)",
    "impact": "Code readability and testability",
    "remediation": "Refactor into smaller, simpler functions",
    "timeline": "1-2 months",
    "effort": "2-5 days"
  },
  {
    "type": "MAINTAINABILITY_ISSUE",
    "risk_level": "MEDIUM",
    "file": "backend/node_engine/email_nodes.py",
    "description": "High complexity function '_matches_criteria' (cyclomatic complexity: 44)",
    "impact": "Code readability and testability",
    "remediation": "Refactor into smaller, simpler functions",
    "timeline": "1-2 months",
    "effort": "2-5 days"
  },
  {
    "type": "MAINTAINABILITY_ISSUE",
    "risk_level": "MEDIUM",
    "file": "src/core/workflow_engine.py",
    "description": "High complexity function '_run_sequential' (cyclomatic complexity: 17)",
    "impact": "Code readability and testability",
    "remediation": "Refactor into smaller, simpler functions",
    "timeline": "1-2 months",
    "effort": "2-5 days"
  },
  {
    "type": "MAINTAINABILITY_ISSUE",
    "risk_level": "MEDIUM",
    "file": "src/core/workflow_engine.py",
    "description": "High complexity function '_evaluate_condition' (cyclomatic complexity: 18)",
    "impact": "Code readability and testability",
    "remediation": "Refactor into smaller, simpler functions",
    "timeline": "1-2 months",
    "effort": "2-5 days"
  }
]